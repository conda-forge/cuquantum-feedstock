{% set version = "22.03.0" %}
{% set patch_version = "40" %}

package:
  name: cuquantum
  version: {{ version }}.{{ patch_version }}

source:
  url: https://developer.download.nvidia.com/compute/cuquantum/redist/cuquantum/linux-x86_64/cuquantum-linux-x86_64-{{ version }}.{{ patch_version }}-archive.tar.xz    # [linux64]
  url: https://developer.download.nvidia.com/compute/cuquantum/redist/cuquantum/linux-sbsa/cuquantum-linux-sbsa-{{ version }}.{{ patch_version }}-archive.tar.xz        # [aarch64]
  url: https://developer.download.nvidia.com/compute/cuquantum/redist/cuquantum/linux-ppc64le/cuquantum-linux-ppc64le-{{ version }}.{{ patch_version }}-archive.tar.xz  # [ppc64le]

  sha256: 740d28198443481ce3fbc738bea3223a3e758a62b165884fbafd5c0fdd5528fc  # [linux64]
  sha256: ebf3f9ad01732492e970d61a90d504858a61be8f0cf84e0695fec3090af17b25  # [aarch64]
  sha256: 110fabf0171752232da0bf5a989fed34c50db4422360173b39ca931488fd5a32  # [ppc64le]

build:
  number: 0
  skip: True  # [win or cuda_compiler_version != "11.2"]
  script_env:
    # for some reason /usr/local/cuda is not added to $PATH in ppc64le's docker image
    - CUDA_HOME  # [ppc64le or aarch64]
  script:
    - mkdir -p $PREFIX/include                                            # [linux]
    - cp -r include/* $PREFIX/include/                                    # [linux]
    - mkdir -p $PREFIX/lib                                                # [linux]
    - mv lib/*.so* $PREFIX/lib/                                           # [linux]

    # Patch for conda-forge:
    # According to the CUDA support matrix, we require glibc 2.27+ on aarch64-sbsa
    # and ppc64le, while conda-forge is still on 2.17. However, given that powf is
    # the only offending symbol that needs a newer glibc, it is the easiest if we
    # just patch it.
    - patchelf --clear-symbol-version powf $PREFIX/lib/libcustatevec.so   # [aarch64 or ppc64le]
    #- patchelf --clear-symbol-version __tls_get_addr_opt $PREFIX/lib/libcustatevec.so  # [ppc64le]
#    # Fix undefined references, see
#    # https://github.com/conda-forge/cuquantum-feedstock/pull/5#issuecomment-1024625275
#    - patchelf --add-needed libcublas.so.11 $PREFIX/lib/libcustatevec.so  # [ppc64le]
  run_exports:
    - {{ pin_subpackage('cuquantum', max_pin='x.x') }}
  ignore_run_exports_from:
    - {{ compiler('cuda') }}
  missing_dso_whitelist:
    - '*/libcutensor.so*'
    - '*/libcublas.so*'
    - '*/libcublasLt.so*'

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cuda') }}
    - sysroot_linux-64 2.17  # [linux64]
  host:
  run:
    - _openmp_mutex  # [linux]
    - libgomp        # [linux]
    - cudatoolkit >=11.0,<12
    - cutensor >=1.5,<2

test:
  requires:
    - git
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}
    - sysroot_linux-64 2.17  # [linux64]
    # make sure we pick up the version matching the docker,
    # or the linker would complain 
    - cudatoolkit {{ cuda_compiler_version }}
  files:
    - test_load_elf.c        # [linux]

about:
  home: https://developer.nvidia.com/cuquantum-sdk
  license: LicenseRef-cuQuantum-Software-License-Agreement
  license_url: https://docs.nvidia.com/cuda/cuquantum/license.html
  license_file: docs/cuQuantum_license.pdf
  summary: "cuQuantum SDK: A High-Performance Library for Accelerating Quantum Information Science"
  description: |
    NVIDIA cuQuantum is an SDK of optimized libraries and tools for accelerating quantum computing workflows.
    Using NVIDIA GPU Tensor Core GPUs, developers can use cuQuantum to speed up quantum circuit simulations
    based on state vector and tensor network methods by orders of magnitude. Two major components of the
    SDK are

      - cuStateVec: a high-performance library for state vector computations
      - cuTensorNet: a high-performance library for tensor network computations

    License Agreements:- The packages are governed by the NVIDIA cuQuantum
    Software License Agreement (EULA). By downloading and using the packages,
    you accept the terms and conditions of the NVIDIA cuQuantum EULA -
    https://docs.nvidia.com/cuda/cuquantum/license.html
  doc_url: https://docs.nvidia.com/cuda/cuquantum/index.html
  dev_url: https://developer.nvidia.com/cuquantum-downloads

extra:
  recipe-maintainers:
    - leofang
    - mtjrider
